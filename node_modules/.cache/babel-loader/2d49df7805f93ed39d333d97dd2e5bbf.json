{"ast":null,"code":"import _slicedToArray from\"/Users/thomaswoodward/OneDrive/GitHub/internet-project-development/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import Button from\"react-bootstrap/Button\";import Form from\"react-bootstrap/Form\";import Modal from\"react-bootstrap/Modal\";import Container from\"react-bootstrap/Container\";import Row from\"react-bootstrap/Row\";import Col from\"react-bootstrap/Col\";function BodyFatModal(props){var _useState=useState(),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),waist=_useState4[0],setWaist=_useState4[1];var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),gender=_useState6[0],setGender=_useState6[1];var _useState7=useState(0),_useState8=_slicedToArray(_useState7,2),neck=_useState8[0],setNeck=_useState8[1];var _useState9=useState(0),_useState10=_slicedToArray(_useState9,2),height=_useState10[0],setHeight=_useState10[1];var _useState11=useState(0),_useState12=_slicedToArray(_useState11,2),hip=_useState12[0],setHip=_useState12[1];var _useState13=useState(0),_useState14=_slicedToArray(_useState13,2),age=_useState14[0],setAge=_useState14[1];var _useState15=useState(0),_useState16=_slicedToArray(_useState15,2),weight=_useState16[0],setWeight=_useState16[1];var handleWaist=function handleWaist(e){setWaist(e.target.value);};var handleGender=function handleGender(e){setGender(e.target.value);};var handleNeck=function handleNeck(e){setNeck(e.target.value);};var handleHeight=function handleHeight(e){setHeight(e.target.value);};var handleHip=function handleHip(e){setHip(e.target.value);};var handleAge=function handleAge(e){setAge(e.target.value);};var handleWeight=function handleWeight(e){setWeight(e.target.value);};var handleClick=function handleClick(){fetch(\"https://fitness-calculator.p.rapidapi.com/bodyfat?waist=\".concat(waist,\"&gender=\").concat(gender,\"&neck=\").concat(neck,\"&heigth=\").concat(height,\"&hip=\").concat(hip,\"&age=\").concat(age,\"&weigth=\").concat(weight),{method:\"GET\",headers:{\"x-rapidapi-host\":\"fitness-calculator.p.rapidapi.com\",\"x-rapidapi-key\":\"adf0ea3817msh93d3df2122cf860p158840jsn5320d164d6d5\"}}).then(function(response){return response.json();}).then(function(response){setData(response);}).catch(function(err){console.log(err);});};return/*#__PURE__*/React.createElement(Modal,Object.assign({},props,{size:\"lg\",\"aria-labelledby\":\"contained-modal-title-vcenter\",centered:true}),/*#__PURE__*/React.createElement(Modal.Header,{closeButton:true},/*#__PURE__*/React.createElement(Modal.Title,{id:\"contained-modal-title-vcenter\"},\"Calculate Body Fat Percentage\")),/*#__PURE__*/React.createElement(Modal.Body,null,/*#__PURE__*/React.createElement(Container,{fluid:true},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Form,null,/*#__PURE__*/React.createElement(Form.Group,null,/*#__PURE__*/React.createElement(Form.Label,null,\"Waist circumference (cm)\"),/*#__PURE__*/React.createElement(Form.Control,{type:\"number\",value:waist,onChange:handleWaist})),/*#__PURE__*/React.createElement(Form.Group,null,/*#__PURE__*/React.createElement(Form.Label,null,\"Gender\"),/*#__PURE__*/React.createElement(Form.Control,{type:\"string\",as:\"select\",value:gender,onChange:handleGender},/*#__PURE__*/React.createElement(\"option\",null,\"Male\"),/*#__PURE__*/React.createElement(\"option\",null,\"Female\"))),/*#__PURE__*/React.createElement(Form.Label,null,\"Neck circumference (cm)\"),/*#__PURE__*/React.createElement(Form.Group,null,/*#__PURE__*/React.createElement(Form.Control,{type:\"number\",value:neck,onChange:handleNeck})),/*#__PURE__*/React.createElement(Form.Group,null,/*#__PURE__*/React.createElement(Form.Label,null,\"Height (cm)\"),/*#__PURE__*/React.createElement(Form.Control,{type:\"number\",value:height,onChange:handleHeight})),/*#__PURE__*/React.createElement(Form.Group,null,/*#__PURE__*/React.createElement(Form.Label,null,\"Hip circumference (cm)\"),/*#__PURE__*/React.createElement(Form.Control,{type:\"string\",value:hip,onChange:handleHip})),/*#__PURE__*/React.createElement(Form.Label,null,\"Age\"),/*#__PURE__*/React.createElement(Form.Group,null,/*#__PURE__*/React.createElement(Form.Control,{type:\"number\",value:age,onChange:handleAge})),/*#__PURE__*/React.createElement(Form.Label,null,\"Weight (kg)\"),/*#__PURE__*/React.createElement(Form.Group,null,/*#__PURE__*/React.createElement(Form.Control,{type:\"number\",value:weight,onChange:handleWeight})),/*#__PURE__*/React.createElement(Form.Group,null,/*#__PURE__*/React.createElement(Button,{variant:\"secondary\",onClick:handleClick},\"Calculate\")))),/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(\"p\",null,data?JSON.stringify(data):\"Press 'Calculate' to see your result\"))))));}export default BodyFatModal;","map":{"version":3,"sources":["/Users/thomaswoodward/OneDrive/GitHub/internet-project-development/src/components/BodyFatModal.js"],"names":["React","useState","Button","Form","Modal","Container","Row","Col","BodyFatModal","props","data","setData","waist","setWaist","gender","setGender","neck","setNeck","height","setHeight","hip","setHip","age","setAge","weight","setWeight","handleWaist","e","target","value","handleGender","handleNeck","handleHeight","handleHip","handleAge","handleWeight","handleClick","fetch","method","headers","then","response","json","catch","err","console","log","JSON","stringify"],"mappings":"yLAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CAEA,MAAOC,CAAAA,MAAP,KAAmB,wBAAnB,CACA,MAAOC,CAAAA,IAAP,KAAiB,sBAAjB,CACA,MAAOC,CAAAA,KAAP,KAAkB,uBAAlB,CAEA,MAAOC,CAAAA,SAAP,KAAsB,2BAAtB,CACA,MAAOC,CAAAA,GAAP,KAAgB,qBAAhB,CACA,MAAOC,CAAAA,GAAP,KAAgB,qBAAhB,CAEA,QAASC,CAAAA,YAAT,CAAsBC,KAAtB,CAA6B,eACHR,QAAQ,EADL,wCACpBS,IADoB,eACdC,OADc,8BAGDV,QAAQ,CAAC,CAAD,CAHP,yCAGpBW,KAHoB,eAGbC,QAHa,8BAICZ,QAAQ,EAJT,yCAIpBa,MAJoB,eAIZC,SAJY,8BAKHd,QAAQ,CAAC,CAAD,CALL,yCAKpBe,IALoB,eAKdC,OALc,8BAMChB,QAAQ,CAAC,CAAD,CANT,0CAMpBiB,MANoB,gBAMZC,SANY,gCAOLlB,QAAQ,CAAC,CAAD,CAPH,2CAOpBmB,GAPoB,gBAOfC,MAPe,gCAQLpB,QAAQ,CAAC,CAAD,CARH,2CAQpBqB,GARoB,gBAQfC,MARe,gCASCtB,QAAQ,CAAC,CAAD,CATT,2CASpBuB,MAToB,gBASZC,SATY,gBAW3B,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,CAAD,CAAO,CACzBd,QAAQ,CAACc,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR,CACD,CAFD,CAIA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACH,CAAD,CAAO,CAC1BZ,SAAS,CAACY,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT,CACD,CAFD,CAIA,GAAME,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACJ,CAAD,CAAO,CACxBV,OAAO,CAACU,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP,CACD,CAFD,CAIA,GAAMG,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACL,CAAD,CAAO,CAC1BR,SAAS,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT,CACD,CAFD,CAIA,GAAMI,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACN,CAAD,CAAO,CACvBN,MAAM,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAN,CACD,CAFD,CAIA,GAAMK,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACP,CAAD,CAAO,CACvBJ,MAAM,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAN,CACD,CAFD,CAIA,GAAMM,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACR,CAAD,CAAO,CAC1BF,SAAS,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT,CACD,CAFD,CAIA,GAAMO,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxBC,KAAK,mEACwDzB,KADxD,oBACwEE,MADxE,kBACuFE,IADvF,oBACsGE,MADtG,iBACoHE,GADpH,iBAC+HE,GAD/H,oBAC6IE,MAD7I,EAEH,CACEc,MAAM,CAAE,KADV,CAEEC,OAAO,CAAE,CACP,kBAAmB,mCADZ,CAEP,iBACE,oDAHK,CAFX,CAFG,CAAL,CAWGC,IAXH,CAWQ,SAACC,QAAD,QAAcA,CAAAA,QAAQ,CAACC,IAAT,EAAd,EAXR,EAYGF,IAZH,CAYQ,SAACC,QAAD,CAAc,CAClB9B,OAAO,CAAC8B,QAAD,CAAP,CACD,CAdH,EAeGE,KAfH,CAeS,SAACC,GAAD,CAAS,CACdC,OAAO,CAACC,GAAR,CAAYF,GAAZ,EACD,CAjBH,EAkBD,CAnBD,CAqBA,mBACE,oBAAC,KAAD,kBACMnC,KADN,EAEE,IAAI,CAAC,IAFP,CAGE,kBAAgB,+BAHlB,CAIE,QAAQ,KAJV,gBAME,oBAAC,KAAD,CAAO,MAAP,EAAc,WAAW,KAAzB,eACE,oBAAC,KAAD,CAAO,KAAP,EAAa,EAAE,CAAC,+BAAhB,kCADF,CANF,cAWE,oBAAC,KAAD,CAAO,IAAP,mBACE,oBAAC,SAAD,EAAW,KAAK,KAAhB,eACE,oBAAC,GAAD,mBACE,oBAAC,GAAD,mBACE,oBAAC,IAAD,mBACE,oBAAC,IAAD,CAAM,KAAN,mBACE,oBAAC,IAAD,CAAM,KAAN,iCADF,cAEE,oBAAC,IAAD,CAAM,OAAN,EACE,IAAI,CAAC,QADP,CAEE,KAAK,CAAEG,KAFT,CAGE,QAAQ,CAAEc,WAHZ,EAFF,CADF,cASE,oBAAC,IAAD,CAAM,KAAN,mBACE,oBAAC,IAAD,CAAM,KAAN,eADF,cAEE,oBAAC,IAAD,CAAM,OAAN,EACE,IAAI,CAAC,QADP,CAEE,EAAE,CAAC,QAFL,CAGE,KAAK,CAAEZ,MAHT,CAIE,QAAQ,CAAEgB,YAJZ,eAME,yCANF,cAOE,2CAPF,CAFF,CATF,cAqBE,oBAAC,IAAD,CAAM,KAAN,gCArBF,cAsBE,oBAAC,IAAD,CAAM,KAAN,mBACE,oBAAC,IAAD,CAAM,OAAN,EACE,IAAI,CAAC,QADP,CAEE,KAAK,CAAEd,IAFT,CAGE,QAAQ,CAAEe,UAHZ,EADF,CAtBF,cA8BE,oBAAC,IAAD,CAAM,KAAN,mBACE,oBAAC,IAAD,CAAM,KAAN,oBADF,cAEE,oBAAC,IAAD,CAAM,OAAN,EACE,IAAI,CAAC,QADP,CAEE,KAAK,CAAEb,MAFT,CAGE,QAAQ,CAAEc,YAHZ,EAFF,CA9BF,cAsCE,oBAAC,IAAD,CAAM,KAAN,mBACE,oBAAC,IAAD,CAAM,KAAN,+BADF,cAEE,oBAAC,IAAD,CAAM,OAAN,EACE,IAAI,CAAC,QADP,CAEE,KAAK,CAAEZ,GAFT,CAGE,QAAQ,CAAEa,SAHZ,EAFF,CAtCF,cA8CE,oBAAC,IAAD,CAAM,KAAN,YA9CF,cA+CE,oBAAC,IAAD,CAAM,KAAN,mBACE,oBAAC,IAAD,CAAM,OAAN,EACE,IAAI,CAAC,QADP,CAEE,KAAK,CAAEX,GAFT,CAGE,QAAQ,CAAEY,SAHZ,EADF,CA/CF,cAsDE,oBAAC,IAAD,CAAM,KAAN,oBAtDF,cAuDE,oBAAC,IAAD,CAAM,KAAN,mBACE,oBAAC,IAAD,CAAM,OAAN,EACE,IAAI,CAAC,QADP,CAEE,KAAK,CAAEV,MAFT,CAGE,QAAQ,CAAEW,YAHZ,EADF,CAvDF,cA8DE,oBAAC,IAAD,CAAM,KAAN,mBACE,oBAAC,MAAD,EAAQ,OAAO,CAAC,WAAhB,CAA4B,OAAO,CAAEC,WAArC,cADF,CA9DF,CADF,CADF,cAuEE,oBAAC,GAAD,mBACE,6BACG1B,IAAI,CACDqC,IAAI,CAACC,SAAL,CAAetC,IAAf,CADC,CAED,sCAHN,CADF,CAvEF,CADF,CADF,CAXF,CADF,CAiGD,CAED,cAAeF,CAAAA,YAAf","sourcesContent":["import React, { useState } from \"react\"\n\nimport Button from \"react-bootstrap/Button\"\nimport Form from \"react-bootstrap/Form\"\nimport Modal from \"react-bootstrap/Modal\"\n\nimport Container from \"react-bootstrap/Container\"\nimport Row from \"react-bootstrap/Row\"\nimport Col from \"react-bootstrap/Col\"\n\nfunction BodyFatModal(props) {\n  const [data, setData] = useState()\n\n  const [waist, setWaist] = useState(0)\n  const [gender, setGender] = useState()\n  const [neck, setNeck] = useState(0)\n  const [height, setHeight] = useState(0)\n  const [hip, setHip] = useState(0)\n  const [age, setAge] = useState(0)\n  const [weight, setWeight] = useState(0)\n\n  const handleWaist = (e) => {\n    setWaist(e.target.value)\n  }\n\n  const handleGender = (e) => {\n    setGender(e.target.value)\n  }\n\n  const handleNeck = (e) => {\n    setNeck(e.target.value)\n  }\n\n  const handleHeight = (e) => {\n    setHeight(e.target.value)\n  }\n\n  const handleHip = (e) => {\n    setHip(e.target.value)\n  }\n\n  const handleAge = (e) => {\n    setAge(e.target.value)\n  }\n\n  const handleWeight = (e) => {\n    setWeight(e.target.value)\n  }\n\n  const handleClick = () => {\n    fetch(\n      `https://fitness-calculator.p.rapidapi.com/bodyfat?waist=${waist}&gender=${gender}&neck=${neck}&heigth=${height}&hip=${hip}&age=${age}&weigth=${weight}`,\n      {\n        method: \"GET\",\n        headers: {\n          \"x-rapidapi-host\": \"fitness-calculator.p.rapidapi.com\",\n          \"x-rapidapi-key\":\n            \"adf0ea3817msh93d3df2122cf860p158840jsn5320d164d6d5\",\n        },\n      }\n    )\n      .then((response) => response.json())\n      .then((response) => {\n        setData(response)\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n  }\n\n  return (\n    <Modal\n      {...props}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          Calculate Body Fat Percentage\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Container fluid>\n          <Row>\n            <Col>\n              <Form>\n                <Form.Group>\n                  <Form.Label>Waist circumference (cm)</Form.Label>\n                  <Form.Control\n                    type=\"number\"\n                    value={waist}\n                    onChange={handleWaist}\n                  />\n                </Form.Group>\n                <Form.Group>\n                  <Form.Label>Gender</Form.Label>\n                  <Form.Control\n                    type=\"string\"\n                    as=\"select\"\n                    value={gender}\n                    onChange={handleGender}\n                  >\n                    <option>Male</option>\n                    <option>Female</option>\n                  </Form.Control>\n                </Form.Group>\n                <Form.Label>Neck circumference (cm)</Form.Label>\n                <Form.Group>\n                  <Form.Control\n                    type=\"number\"\n                    value={neck}\n                    onChange={handleNeck}\n                  />\n                </Form.Group>\n\n                <Form.Group>\n                  <Form.Label>Height (cm)</Form.Label>\n                  <Form.Control\n                    type=\"number\"\n                    value={height}\n                    onChange={handleHeight}\n                  />\n                </Form.Group>\n                <Form.Group>\n                  <Form.Label>Hip circumference (cm)</Form.Label>\n                  <Form.Control\n                    type=\"string\"\n                    value={hip}\n                    onChange={handleHip}\n                  />\n                </Form.Group>\n                <Form.Label>Age</Form.Label>\n                <Form.Group>\n                  <Form.Control\n                    type=\"number\"\n                    value={age}\n                    onChange={handleAge}\n                  />\n                </Form.Group>\n                <Form.Label>Weight (kg)</Form.Label>\n                <Form.Group>\n                  <Form.Control\n                    type=\"number\"\n                    value={weight}\n                    onChange={handleWeight}\n                  />\n                </Form.Group>\n                <Form.Group>\n                  <Button variant=\"secondary\" onClick={handleClick}>\n                    Calculate\n                  </Button>\n                </Form.Group>\n              </Form>\n            </Col>\n            <Col>\n              <p>\n                {data\n                  ? JSON.stringify(data)\n                  : \"Press 'Calculate' to see your result\"}\n              </p>\n            </Col>\n          </Row>\n        </Container>\n      </Modal.Body>\n    </Modal>\n  )\n}\n\nexport default BodyFatModal\n"]},"metadata":{},"sourceType":"module"}